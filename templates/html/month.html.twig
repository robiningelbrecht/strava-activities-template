{% set svgDistance = '<svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" stroke-width="3" stroke="#F26722" fill="none"><path d="M17.94,54.81a.1.1,0,0,1-.14,0c-1-1.11-11.69-13.23-11.69-21.26,0-9.94,6.5-12.24,11.76-12.24,4.84,0,11.06,2.6,11.06,12.24C28.93,41.84,18.87,53.72,17.94,54.81Z"/><circle cx="17.52" cy="31.38" r="4.75"/><path d="M49.58,34.77a.11.11,0,0,1-.15,0c-.87-1-9.19-10.45-9.19-16.74,0-7.84,5.12-9.65,9.27-9.65,3.81,0,8.71,2,8.71,9.65C58.22,24.52,50.4,33.81,49.58,34.77Z"/><circle cx="49.23" cy="17.32" r="3.75"/><path d="M17.87,54.89a28.73,28.73,0,0,0,3.9.89"/><path d="M24.68,56.07c2.79.12,5.85-.28,7.9-2.08,5.8-5.09,2.89-11.25,6.75-14.71a16.72,16.72,0,0,1,4.93-3" stroke-dasharray="7.8 2.92"/><path d="M45.63,35.8a23,23,0,0,1,3.88-.95"/></svg>' %}
{% set svgElevation = '<svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="#F26722" viewBox="0 0 32 32"><path d="M 17.011719 3.0214844 L 16.099609 4.6816406 C 13.925337 8.6341175 11.752154 12.584804 9.578125 16.537109 L 7.6621094 14.621094 L 7.0019531 15.71875 C 5.0489841 18.973698 3.0956556 22.230199 1.1425781 25.486328 L 0.234375 27 L 2 27 L 31.517578 27 L 30.919922 25.605469 C 29.919963 23.272564 28.919963 20.938564 27.919922 18.605469 L 27.337891 17.248047 L 25.269531 19.316406 C 22.803333 14.44792 20.334132 9.5793478 17.867188 4.7109375 L 17.011719 3.0214844 z M 16.939453 7.3027344 C 17.952378 9.3017082 18.965829 11.299996 19.978516 13.298828 L 19.205078 13.962891 L 16.925781 12.009766 L 14.646484 13.962891 L 13.716797 13.164062 C 14.791046 11.210336 15.864885 9.2563086 16.939453 7.3027344 z M 16.925781 14.642578 L 19.205078 16.595703 L 20.908203 15.136719 C 21.974522 17.24151 23.041208 19.346257 24.107422 21.451172 L 24.730469 22.683594 L 26.662109 20.751953 C 27.268948 22.167887 27.875558 23.583992 28.482422 25 L 3.765625 25 C 5.1965747 22.614689 6.6276315 20.230552 8.0585938 17.845703 L 10.046875 19.833984 L 10.689453 18.667969 C 11.370357 17.430195 12.051768 16.192896 12.732422 14.955078 L 14.646484 16.595703 L 16.925781 14.642578 z"/></svg>' %}
{% set svgTime = '<svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><path d="M12 8V12L15 15" stroke="#F26722" stroke-width="2" stroke-linecap="round"/><circle cx="12" cy="12" r="9" stroke="#F26722" stroke-width="2"/></svg>' %}
{% set svgChallenges = '<svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><path d="M19 9C19 10.45 18.57 11.78 17.83 12.89C16.75 14.49 15.04 15.62 13.05 15.91C12.71 15.97 12.36 16 12 16C11.64 16 11.29 15.97 10.95 15.91C8.96 15.62 7.25 14.49 6.17 12.89C5.43 11.78 5 10.45 5 9C5 5.13 8.13 2 12 2C15.87 2 19 5.13 19 9Z" stroke="#F26722" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M21.25 18.47L19.6 18.86C19.23 18.95 18.94 19.23 18.86 19.6L18.51 21.07C18.32 21.87 17.3 22.11 16.77 21.48L12 16L7.22996 21.49C6.69996 22.12 5.67996 21.88 5.48996 21.08L5.13996 19.61C5.04996 19.24 4.75996 18.95 4.39996 18.87L2.74996 18.48C1.98996 18.3 1.71996 17.35 2.26996 16.8L6.16996 12.9C7.24996 14.5 8.95996 15.63 10.95 15.92C11.29 15.98 11.64 16.01 12 16.01C12.36 16.01 12.71 15.98 13.05 15.92C15.04 15.63 16.75 14.5 17.83 12.9L21.73 16.8C22.28 17.34 22.01 18.29 21.25 18.47Z" stroke="#F26722" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M12.58 5.98L13.17 7.15999C13.25 7.31999 13.46 7.48 13.65 7.51L14.72 7.68999C15.4 7.79999 15.56 8.3 15.07 8.79L14.24 9.61998C14.1 9.75998 14.02 10.03 14.07 10.23L14.31 11.26C14.5 12.07 14.07 12.39 13.35 11.96L12.35 11.37C12.17 11.26 11.87 11.26 11.69 11.37L10.69 11.96C9.96997 12.38 9.53997 12.07 9.72997 11.26L9.96997 10.23C10.01 10.04 9.93997 9.75998 9.79997 9.61998L8.96997 8.79C8.47997 8.3 8.63997 7.80999 9.31997 7.68999L10.39 7.51C10.57 7.48 10.78 7.31999 10.86 7.15999L11.45 5.98C11.74 5.34 12.26 5.34 12.58 5.98Z" stroke="#F26722" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>' %}
{% set svgCalories = '<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20"><path stroke="#F26722" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15.147 15.085a7.159 7.159 0 0 1-6.189 3.307A6.713 6.713 0 0 1 3.1 15.444c-2.679-4.513.287-8.737.888-9.548A4.373 4.373 0 0 0 5 1.608c1.287.953 6.445 3.218 5.537 10.5 1.5-1.122 2.706-3.01 2.853-6.14 1.433 1.049 3.993 5.395 1.757 9.117Z"></path></svg>' %}
{% set svgHashtag = '<svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g stroke-width="0"></g><g stroke-linecap="round" stroke-linejoin="round"></g><g> <path d="M10 4L7 20M17 4L14 20M5 8H20M4 16H19" stroke="#F26722" stroke-width="2" stroke-linecap="round"></path> </g></svg>' %}

{% autoescape false %}
    <!-- Modal header -->
    <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
        <h3 class="flex items-center text-lg font-semibold text-gray-900 dark:text-white">
            {% set previousMonth = calendar.getMonth().getPreviousMonth() %}
            {% set nextMonth = calendar.getMonth().getNextMonth() %}
            {% if hasPreviousMonth %}
                <a  href="#" data-model-content-url="month/month-{{ previousMonth.getId() }}.html">
                    <svg class="w-3 h-3 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 8 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 1 1.3 6.326a.91.91 0 0 0 0 1.348L7 13"/>
                    </svg>
                </a>
            {% endif %}
            <span class="mx-2">{{ calendar.getMonth().getLabel() }}</span>
            {% if hasNextMonth %}
                <a  href="#" data-model-content-url="month/month-{{ nextMonth.getId() }}.html">
                    <svg class="w-3 h-3 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 8 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 13 5.7-5.326a.909.909 0 0 0 0-1.348L1 1"/>
                    </svg>
                </a>
            {% endif %}
        </h3>
        <div class="flex items-center">
            <ul class="hidden md:flex text-center mr-2 divide-x divide-gray-200 dark:divide-gray-700">
                <li class="flex items-center gap-x-0.5 pr-2">
                    {{ svgDistance }}
                    <div>{{ statistics.totalDistance|formatNumber(0) }}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">km</div>
                </li>
                <li class="flex items-center gap-x-0.5 px-2">
                    {{ svgElevation }}
                    <div>{{ statistics.totalElevation|formatNumber(0) }}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">m</div>
                </li>
                <li class="flex items-center gap-x-0.5 px-2">
                    {{ svgTime }}
                    <div>{{ (statistics.movingTimeInSeconds / 3600)|formatNumber(0) }}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">hours</div>
                </li>
                <li class="flex items-center gap-x-0.5 px-2">
                    {{ svgChallenges }}
                    <div> {{ statistics.challengesCompleted }}</div>
                </li>
                <li class="flex items-center gap-x-0.5 px-2">
                    {{ svgCalories }}
                    <div>{{ statistics.totalCalories|formatNumber(0) }}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">kcal</div>
                </li>
                <li class="flex items-center gap-x-0.5 pl-2">
                    {{ svgHashtag }}
                    <div>{{ statistics.numberOfRides }}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">rides</div>
                </li>
            </ul>
            <button type="button" class="close text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
                <span class="sr-only">Close modal</span>
            </button>
        </div>
    </div>
    <!-- Modal body -->
    <div class="p-4 md:p-5 space-y-4">
        <div class="grid grid-cols-1 gap-4">
            <div class="flex flex-col">
                <div class="grid grid-cols-7 gap-px leading-6 font-semibold text-xs text-center border border-b-0 dark:border-gray-600">
                    <div class="py-2 bg-white dark:bg-gray-700">
                        Mon
                    </div>
                    <div class="py-2 bg-white dark:bg-gray-700">
                        Thu
                    </div>
                    <div class="py-2 bg-white dark:bg-gray-700">
                        Wed
                    </div>
                    <div class="py-2 bg-white dark:bg-gray-700">
                        Thu
                    </div>
                    <div class="py-2 bg-white dark:bg-gray-700">
                        Fri
                    </div>
                    <div class="py-2 bg-white dark:bg-gray-700">
                        Sat
                    </div>
                    <div class="py-2 bg-white dark:bg-gray-700">
                        Sun
                    </div>
                </div>
                <div class="grid grid-cols-7 gap-px leading-6 text-xs w-full bg-gray-200 dark:bg-gray-600 border dark:border-gray-600">
                    {% for day in calendar.getDays() %}
                        <div class="py-2 px-3 {{ day.isCurrentMonth ? 'bg-white dark:bg-gray-700' : 'bg-gray-100 dark:bg-gray-800' }}">
                            <div class="text-right text-gray-400">
                                {{ day.getDayNumber() }}
                            </div>
                            <div class="h-16 overflow-y-auto">
                                {% if not day.getActivities().isEmpty() %}
                                    <ul>
                                        {% for activity in day.getActivities() %}
                                            {% set color = activity.getType().value == 'VirtualRide' ? 'orange-500' : 'emerald-600' %}
                                            <li class="mb-1 truncate pl-1 bg-{{ color }}/[.1] border-l-2 border-l-{{ color }}">
                                                {{ render('html/component/activity-title.html.twig', {'activity': activity, 'truncate': true}) }}
                                            </li>
                                        {% endfor %}
                                    </ul>
                                {% endif %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endautoescape %}