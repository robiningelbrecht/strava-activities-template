{% set svgDistance = '<svg class="w-7 h-7" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" stroke-width="3" stroke="#F26722" fill="none"><path d="M17.94,54.81a.1.1,0,0,1-.14,0c-1-1.11-11.69-13.23-11.69-21.26,0-9.94,6.5-12.24,11.76-12.24,4.84,0,11.06,2.6,11.06,12.24C28.93,41.84,18.87,53.72,17.94,54.81Z"/><circle cx="17.52" cy="31.38" r="4.75"/><path d="M49.58,34.77a.11.11,0,0,1-.15,0c-.87-1-9.19-10.45-9.19-16.74,0-7.84,5.12-9.65,9.27-9.65,3.81,0,8.71,2,8.71,9.65C58.22,24.52,50.4,33.81,49.58,34.77Z"/><circle cx="49.23" cy="17.32" r="3.75"/><path d="M17.87,54.89a28.73,28.73,0,0,0,3.9.89"/><path d="M24.68,56.07c2.79.12,5.85-.28,7.9-2.08,5.8-5.09,2.89-11.25,6.75-14.71a16.72,16.72,0,0,1,4.93-3" stroke-dasharray="7.8 2.92"/><path d="M45.63,35.8a23,23,0,0,1,3.88-.95"/></svg>' %}
{% set svgMaxGradient = '<svg class="w-5 h-5 aria-hidden="true" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g stroke-width="0"></g><g stroke-linecap="round" stroke-linejoin="round"></g><g><path fill-rule="evenodd" clip-rule="evenodd" d="M7.25 10.5a3.75 3.75 0 1 1 0-7.5 3.75 3.75 0 0 1 0 7.5zm-1.543 9.207a1 1 0 0 1-1.414-1.414l14-14a1 1 0 1 1 1.414 1.414l-14 14zM13 17.25a3.75 3.75 0 1 0 7.5 0 3.75 3.75 0 0 0-7.5 0zM7.25 8.5a1.75 1.75 0 1 0 0-3.5 1.75 1.75 0 0 0 0 3.5zm11.25 8.75a1.75 1.75 0 1 1-3.5 0 1.75 1.75 0 0 1 3.5 0z" fill="#F26722"></path></g></svg>' %}
{% set svgCalendar = '<svg class="w-7 h-7" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><path d="M3 9H21M7 3V5M17 3V5M6 12H10V16H6V12ZM6.2 21H17.8C18.9201 21 19.4802 21 19.908 20.782C20.2843 20.5903 20.5903 20.2843 20.782 19.908C21 19.4802 21 18.9201 21 17.8V8.2C21 7.07989 21 6.51984 20.782 6.09202C20.5903 5.71569 20.2843 5.40973 19.908 5.21799C19.4802 5 18.9201 5 17.8 5H6.2C5.0799 5 4.51984 5 4.09202 5.21799C3.71569 5.40973 3.40973 5.71569 3.21799 6.09202C3 6.51984 3 7.07989 3 8.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z" stroke="#F26722" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>' %}
{% set svgHashtag = '<svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g stroke-width="0"></g><g stroke-linecap="round" stroke-linejoin="round"></g><g> <path d="M10 4L7 20M17 4L14 20M5 8H20M4 16H19" stroke="#F26722" stroke-width="2" stroke-linecap="round"></path> </g></svg>' %}
{% set svgTime = '<svg class="w-7 h-7" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><path d="M12 8V12L15 15" stroke="#F26722" stroke-width="2" stroke-linecap="round"/><circle cx="12" cy="12" r="9" stroke="#F26722" stroke-width="2"/></svg>' %}
{% set svgPower = '<svg class="w-7 h-7" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><polygon fill="none" stroke="#F26722" stroke-width="2" stroke-miterlimit="10" points="8.29 1.71 18.5 1.71 13.86 9.14 17.57 9.14 7.36 20.29 9.21 12.86 5.5 12.86 8.29 1.71"/></svg>' %}
{% set svgSpeed = '<svg class="w-7 h-7" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"><path d="M6.34315 17.6569C5.22433 16.538 4.4624 15.1126 4.15372 13.5607C3.84504 12.0089 4.00346 10.4003 4.60896 8.93853C5.21446 7.47672 6.23984 6.22729 7.55544 5.34824C8.87103 4.46919 10.4177 4 12 4C13.5823 4 15.129 4.46919 16.4446 5.34824C17.7602 6.22729 18.7855 7.47672 19.391 8.93853C19.9965 10.4003 20.155 12.0089 19.8463 13.5607C19.5376 15.1126 18.7757 16.538 17.6569 17.6569" stroke="#F26722" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M12 12L16 10" stroke="#F26722" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>' %}

{% autoescape false %}
    <!-- Modal header -->
    <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
        <h3 class="flex items-center text-lg font-semibold text-gray-900 dark:text-white">
            <span class="mx-2">{{ segment.getName() }}</span>
        </h3>
        <div class="flex items-center">
            <ul class="hidden md:flex text-center mr-2 divide-x divide-gray-200 dark:divide-gray-700">
                <li class="flex items-center gap-x-0.5 pr-2">
                    {{ svgDistance }}
                    <div>{{ segment.getDistanceInKilometer()|formatNumber(2) }}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">km</div>
                </li>
                <li class="flex items-center gap-x-0.5 px-2">
                    {{ svgMaxGradient }}
                    <div>{{ segment.getMaxGradient() }}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400">max gradient</div>
                </li>
            </ul>
            <button type="button" class="close text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
                <span class="sr-only">Close modal</span>
            </button>
        </div>
    </div>
    <!-- Modal body -->
    <div class="p-4 md:p-5 space-y-4">
        <div class="grid grid-cols-1 gap-4">
            <div class="relative overflow-x-auto">
                <table class="w-full text-sm text-center text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr>
                        <th scope="col" class="px-2 py-3 bg-gray-50 dark:bg-gray-700 lg:sticky lg:left-0">
                            <div class="flex items-center justify-center">
                                {{ svgHashtag }}
                            </div>
                        </th>
                        <th scope="col" class="px-2 py-3">
                            <div class="flex items-center justify-center">
                                {{ svgCalendar }}
                            </div>
                        </th>
                        <th scope="col" class="px-2 py-3">
                        </th>
                        <th scope="col" class="px-2 py-3">
                            <div class="flex items-center justify-center">
                                {{ svgTime }}
                            </div>
                        </th>
                        <th scope="col" class="px-2 py-3">
                            <div class="flex items-center justify-center">
                                {{ svgSpeed }}
                            </div>
                        </th>
                        <th scope="col" class="px-2 py-3">
                            <div class="flex items-center justify-center">
                                {{ svgPower }}
                            </div>
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for segmentEffort in segmentEfforts %}
                        <tr class="{{ cycle(['bg-white border-b dark:bg-gray-900 dark:border-gray-700', 'border-b bg-gray-50 dark:bg-gray-800 dark:border-gray-700'], loop.index0) }}">
                            <td class="px-2 py-2 truncate lg:sticky lg:left-0 {{ cycle(['bg-white dark:bg-gray-900', 'bg-gray-50 dark:bg-gray-800'], loop.index0) }}">
                                {{ loop.index }}
                            </td>
                            <td class="px-2 py-2">
                                <div class="flex justify-center">
                                    <div class="w-[4.5rem]">{{ segmentEffort.getStartDateTime().format('d-m-y') }}</div>
                                </div>
                            </td>
                            <td class="px-2 py-2">
                                {{ render('html/component/activity-title.html.twig', {'activity': segmentEffort.getActivity(), 'truncate': true}) }}
                            </td>
                            <td class="px-2 py-2">
                                {{ segmentEffort.getElapsedTimeFormatted() }}
                            </td>
                            <td class="px-2 py-2">
                                {{ segmentEffort.getAverageSpeedInKmPerH()|formatNumber(1) }}<span class="text-xs">km/h</span>
                            </td>
                            <td class="px-2 py-2">
                                {% if segmentEffort.getAverageWatts() %}
                                    {{ segmentEffort.getAverageWatts()|formatNumber(1) }}<span class="text-xs">w</span>
                                {% else %}
                                    n/a
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endautoescape %}