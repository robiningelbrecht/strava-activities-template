{% autoescape false %}
    <!-- Modal header -->
    <div class="z-[10000] sticky top-0 bg-white dark:bg-gray-700 p-4 md:p-5 border-b rounded-t dark:border-gray-600">
        <div class="flex items-center justify-between">
            <h3 class="max-w-[30%] sm:max-w-[50%] md:max-w-[100%] truncate text-lg font-semibold text-gray-900 dark:text-white">
                <a class="flex items-center gap-x-1 hover:underline" href="{{ activity.getUrl() }}" target="_blank"
                   rel="nofollow">
                    {{ activity.getName() }}
                    <svg class="w-2 h-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                         viewBox="0 0 18 18">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M15 11v4.833A1.166 1.166 0 0 1 13.833 17H2.167A1.167 1.167 0 0 1 1 15.833V4.167A1.166 1.166 0 0 1 2.167 3h4.618m4.447-2H17v5.768M9.111 8.889l7.778-7.778"/>
                    </svg>
                </a>
            </h3>
            <span class="mx-1 text-xs font-normal text-gray-500 dark:text-gray-400">-</span>
            <span class="text-xs font-normal text-gray-500 dark:text-gray-400">
                {{ activity.getStartDate().format('H:i \\o\\n l,') }}
                <a href="#" data-model-content-url="month/month-{{ activity.getStartDate().format('Y-m') }}.html"
                   class="hover:underline">{{ activity.getStartDate().format('F') }}</a>
                {{ activity.getStartDate().format(' j, Y') }}
            </span>
            <button type="button"
                    class="close text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
                <span class="sr-only">Close modal</span>
            </button>
        </div>
        {% if activity.getDescription() %}
            <div class="text-xs font-normal text-gray-500 dark:text-gray-400">{{ activity.getDescription() }}</div>
        {% endif %}
    </div>
    <!-- Modal body -->
    <div class="p-4 md:p-5 space-y-4">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
        <div>
            <div class="mb-4 grid grid-cols-6 gap-2">
                <div class="flex flex-col items-center justify-center px-2 py-2 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                    <div class="text-center">
                        <dd class="text-xs text-gray-500 dark:text-gray-400">Distance</dd>
                        <dt class="font-extrabold">{{ activity.getDistanceInKilometer()|formatNumber(0) }}<span
                                    class="text-xs">km</span></dt>
                    </div>
                </div>
                <div class="flex flex-col items-center justify-center px-2 py-2 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                    <div class="text-center">
                        <dd class="text-xs text-gray-500 dark:text-gray-400">Moving time</dd>
                        <dt class="font-extrabold">{{ activity.getMovingTimeFormatted() }}</dt>
                    </div>
                </div>
                <div class="flex flex-col items-center justify-center px-2 py-2 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                    <div class="text-center">
                        <dd class="text-xs text-gray-500 dark:text-gray-400">Elevation</dd>
                        <dt class="font-extrabold">{{ activity.getElevationInMeter()|formatNumber(0) }}<span
                                    class="text-xs">m</span></dt>
                    </div>
                </div>
                <div class="flex flex-col items-center justify-center px-2 py-2 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                    <div class="text-center">
                        <dd class="text-xs text-gray-500 dark:text-gray-400">Calories</dd>
                        <dt class="font-extrabold">{{ activity.getCalories() }}</dt>
                    </div>
                </div>
                <div class="flex flex-col items-center justify-center px-2 py-4 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                    <div class="text-center">
                        <dd class="text-xs text-gray-500 dark:text-gray-400">Gear</dd>
                        <dt class="text-xs font-extrabold">{{ activity.getGearName() ?: 'Other' }}</dt>
                    </div>
                </div>
                <div class="flex flex-col items-center justify-center px-2 py-4 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                    <div class="text-center">
                        <dd class="text-xs text-gray-500 dark:text-gray-400">Device</dd>
                        <dt class="text-xs font-extrabold">{{ activity.getDeviceName() ?: 'None' }}</dt>
                    </div>
                </div>
            </div>
            {% set weather = activity.getWeather() %}
            {% if weather %}
                <div class="mb-4 text-xs font-normal text-gray-500 dark:text-gray-400">
                    {{ weather.getWeatherCodeDescription() }}, {{ weather.getTemperatureInCelsius() }} Â°C,
                    Humidity {{ weather.getRelativeHumidity() }}%,
                    Wind {{ weather.getWindSpeed() }}km/h from {{ weather.getWindDirection() }}.
                </div>
            {% endif %}
            {% if activity.getRemoteImagePaths() %}
                <div class="mb-4 grid grid-cols-4 gap-2">
                    {% for imagePath in activity.getRemoteImagePaths() %}
                        <div>
                            <a href="#" data-popover-target="popover-image-{{ loop.index }}"
                               data-popover-placement="bottom" data-popover-trigger="click">
                                <img class="h-auto max-w-full rounded-lg lazy"
                                     src="{{ renderComponent('placeholder-image') }}" data-src="{{ imagePath }}"
                                     alt="Activity image"/>
                            </a>
                        </div>
                        <div data-popover id="popover-image-{{ loop.index }}" role="tooltip"
                             class="z-[1000] w-[35rem] absolute invisible inline-block text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-0 dark:text-gray-400 dark:bg-gray-800 dark:border-gray-600">
                            <img class="h-auto max-w-full rounded-lg lazy"
                                 src="{{ renderComponent('placeholder-image') }}" data-src="{{ imagePath }}"
                                 alt="Activity image"/>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
            <div class="mb-4 relative overflow-x-auto px-2 py-2 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                <table class="w-full text-sm text-center text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase dark:text-gray-400">
                    <tr>
                        <th scope="col" class="px-2 py-2">

                        </th>
                        <th scope="col" class="px-2 py-2">
                            Speed
                        </th>
                        <th scope="col" class="px-2 py-2">
                            Heart rate
                        </th>
                        <th scope="col" class="px-2 py-2">
                            Cadence
                        </th>
                        <th scope="col" class="px-2 py-2">
                            Power
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr class="border-b dark:border-gray-600">
                        <th class="px-2 py-2">
                            Avg
                        </th>
                        <td class="px-2 py-2 text-sm">
                            {% set averageSpeed = activity.getAverageSpeedInKmPerH() %}
                            {% if averageSpeed %}
                                {{ averageSpeed }}<span class="text-xs">km/h</span>
                            {% else %}
                                n/a
                            {% endif %}
                        </td>
                        <td class="px-2 py-2 text-sm">
                            {% set averageHearRate = activity.getAverageHeartRate() %}
                            {% if averageHearRate %}
                                {{ averageHearRate }}<span class="text-xs">bpm</span>
                            {% else %}
                                n/a
                            {% endif %}
                        </td>
                        <td class="px-2 py-2 text-sm">
                            {% set averageCadence = activity.getAverageCadence() %}
                            {{ averageCadence ?: 'n/a' }}
                        </td>
                        <td class="px-2 py-2 text-sm">
                            {% set averagePower = activity.getAveragePower() %}
                            {% if averagePower %}
                                {{ averagePower }}<span class="text-xs">w</span>
                            {% else %}
                                n/a
                            {% endif %}
                        </td>
                    </tr>
                    <tr>
                        <th class="px-2 py-2">
                            Max
                        </th>
                        <td class="px-2 py-2 text-sm">
                            {% set maxSpeed = activity.getMaxSpeedInKmPerH() %}
                            {% if maxSpeed %}
                                {{ maxSpeed }}<span class="text-xs">km/h</span>
                            {% else %}
                                n/a
                            {% endif %}
                        </td>
                        <td class="px-2 py-2 text-sm">
                            {% set maxHearRate = activity.getMaxHeartRate() %}
                            {% if maxHearRate %}
                                {{ maxHearRate }}<span class="text-xs">bpm</span>
                            {% else %}
                                n/a
                            {% endif %}
                        </td>
                        <td class="px-2 py-2 text-sm">
                            {% set maxCadence = activity.getMaxCadence() %}
                            {{ maxCadence ?: 'n/a' }}
                        </td>
                        <td class="px-2 py-2 text-sm">
                            {% set maxPower = activity.getMaxPower() %}
                            {% if maxPower %}
                                {{ maxPower }}<span class="text-xs">w</span>
                            {% else %}
                                n/a
                            {% endif %}
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
            {% if activity.hasDetailedPowerData() %}
                <div class="relative overflow-x-auto px-2 py-2 border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-600">
                    <table class="w-full text-sm text-center text-gray-500 dark:text-gray-400">
                        <thead class="text-xs text-gray-700 uppercase dark:text-gray-400">
                        {% set timeIntervals =  [5, 60, 300, 1200] %}
                        {% set timeIntervalLabels = ['Best 5s', 'Best 1m', 'Best 5m', 'Best 20m'] %}
                        <tr>
                            {% for timeInterval in timeIntervals %}
                                {% set powerOutput = activity.getBestAveragePowerForTimeInterval(timeInterval) %}
                                {% if powerOutput %}
                                    <th scope="col" colspan="2" class="px-2 py-2">
                                        {{ timeIntervalLabels[loop.index0] }}
                                    </th>
                                {% endif %}
                            {% endfor %}
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            {% for timeInterval in timeIntervals %}
                                {% set powerOutput = activity.getBestAveragePowerForTimeInterval(timeInterval) %}
                                {% if powerOutput %}
                                    <td class="px-2 py-2 first:border-l-0 border-l dark:border-gray-600">
                                        {{ powerOutput.getPower() }}<span class="text-xs">w</span>
                                    </td>
                                    <td class="px-2 py-2 last:border-r-0 border-r dark:border-gray-600">
                                        {{ powerOutput.getRelativePower() }}<span class="text-xs">w/kg</span>
                                    </td>
                                {% endif %}
                            {% endfor %}
                        </tr>
                        </tbody>
                    </table>
                </div>
            {% endif %}
        </div>
        {% if leaflet %}
            {% set leafletOptions = {
                'routes': leaflet.routes,
                'tileLayer': leaflet.map.getTileLayer(),
                'minZoom': leaflet.map.getMinZoom(),
                'maxZoom': leaflet.map.getMaxZoom(),
                'imageOverlay': leaflet.map.getOverlayImageUrl(),
                'bounds': leaflet.map.getBounds(),
            } %}
            <div class="h-[350px]" style="background-color:{{ leaflet.map.getBackgroundColor() }}"
                 data-leaflet='{{ leafletOptions|json_encode }}'></div>
        {% else %}
            <div>
                <img class="h-auto max-w-full rounded-lg lazy" src="{{ renderComponent('placeholder-image') }}"
                     data-src="https://raw.githubusercontent.com/robiningelbrecht/strava-activities-template/master/files/maps/not-found.jpg"
                     alt="No map"/>
            </div>
        {% endif %}
    </div>
    {% if segmentEfforts|length > 0 %}
        <div class="grid grid-cols-1 gap-4">
            <div id="accordion-segments" data-accordion="collapse"
                 data-active-classes="text-gray-900 dark:text-white"
                 data-inactive-classes="text-gray-900 dark:text-white">
                <a id="accordion-segments-heading" data-accordion-target="#accordion-segments-body" aria-expanded="false"
                   aria-controls="accordion-segments-body"
                   class="hover:underline cursor-pointer flex items-center gap-3 justify-between w-full px-2 py-3 font-medium rtl:text-right text-gray-900 dark:text-white">
                    <span>Segments ({{ segmentEfforts|length }})</span>
                    <svg data-accordion-icon class="w-3 h-3 shrink-0" aria-hidden="true"
                         xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M9 5 5 1 1 5"/>
                    </svg>
                </a>
                <div id="accordion-segments-body" class="hidden relative overflow-x-auto"
                     aria-labelledby="accordion-segments-heading">
                    <table class="w-full text-sm text-center text-gray-500 dark:text-gray-400">
                        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-800 dark:text-gray-400">
                        <tr>
                            <th scope="col" class="px-2 py-3 text-left">

                            </th>
                            <th scope="col" class="px-2 py-3">
                                <div class="flex items-center justify-center">
                                    {{ renderSvg('time') }}
                                </div>
                            </th>
                            <th scope="col" class="px-2 py-3">
                                <div class="flex items-center justify-center">
                                    {{ renderSvg('speed') }}
                                </div>
                            </th>
                            <th scope="col" class="px-2 py-3">
                                <div class="flex items-center justify-center">
                                    {{ renderSvg('power') }}
                                </div>
                            </th>
                            <th scope="col" class="px-2 py-3">
                                <div class="flex items-center justify-center">
                                    {{ renderSvg('distance') }}
                                </div>
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for segmentEffort in segmentEfforts %}
                            <tr class="{{ cycle(['bg-white border-b dark:bg-gray-900 dark:border-gray-700', 'border-b bg-gray-50 dark:bg-gray-800 dark:border-gray-700'], loop.index0) }}">
                                <td class="px-2 py-2 text-left">
                                    <a href="#" data-model-content-url="segment/{{ segmentEffort.getSegmentId() }}.html"
                                       class="flex items-center gap-x-1 font-medium text-blue-600 dark:text-blue-500 hover:underline"
                                       rel="nofollow">
                                        <span class="truncate">{{ segmentEffort.getName()|ellipses(50) }}</span>
                                    </a>
                                </td>
                                <td class="px-2 py-2">
                                    {{ segmentEffort.getElapsedTimeFormatted() }}
                                </td>
                                <td class="px-2 py-2">
                                    {{ segmentEffort.getAverageSpeedInKmPerH()|formatNumber(1) }}<span class="text-xs">km/h</span>
                                </td>
                                <td class="px-2 py-2">
                                    {% if segmentEffort.getAverageWatts() %}
                                        {{ segmentEffort.getAverageWatts()|formatNumber(0) }}<span class="text-xs">w</span>
                                    {% endif %}
                                </td>
                                <td class="px-2 py-2">
                                    {{ segmentEffort.getDistanceInKilometer()|formatNumber(2) }}<span class="text-xs">km</span>
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    {% endif %}
    {% if powerDistributionChart or heartRateDistributionChart %}
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
            {% if powerDistributionChart %}
                <div>
                    <h3 class="font-bold mb-1 text-center">Power distribution</h3>
                    <div class="h-[350px]" data-echarts-options='{{ powerDistributionChart }}'></div>
                </div>
            {% endif %}
            {% if heartRateDistributionChart %}
                <div>
                    <h3 class="font-bold mb-1 text-center">Heart rate distribution</h3>
                    <div class="h-[350px]" data-echarts-options='{{ heartRateDistributionChart }}'></div>
                </div>
            {% endif %}
        </div>
    {% endif %}
{% endautoescape %}